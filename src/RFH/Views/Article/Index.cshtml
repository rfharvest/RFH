@model RFH.Models.ArticleIndexViewModel

@{
    ViewBag.Title = string.Format(
        "{0} - {1}", 
        Model.Article.Title, 
        Model.Article.HostSite.Name);
 }

<div class="row-fluid mainContent">
  <div class="span1"></div>
  <div class="span7">
    <div class="breadCrumb">
        @Html.ActionLink(Model.Article.HostSite.Name, "Details", "Site", new {Id=Model.Article.HostSite.UrlFriendlyName}, null)
        &gt;   
        @Html.ActionLink(Model.Article.Category.Name, "Index", "Category", new {Id=Model.Article.Category.UrlFriendlyName}, null)
    </div>

    <div>
        @Html.Raw( Model.Article.Content )
    </div>

    <div class="goUp">
        @Html.ActionLink(String.Format("Back to {0}", Model.Article.HostSite.Name), "Details", "Site", new {Id=Model.Article.HostSite.UrlFriendlyName}, null)
    </div>
    @if(Model.Article.HostSite.CommentsEnabled)
    {
        <h3 class="commentHeader">Comments</h3>
        @if (Model.Comments.Any())
         {
             @Html.Partial("_CommentList", Model.Comments)
         }
         else
         {
             <p>No comments yet!</p>
         }
        <div class="createComment">
            @Html.Partial("_CreateComment", Model.NewComment)
        </div>
    }
   
  </div>

 <div class="span3">
   <div class="skyScraperSpacer"></div>
      <div class="row-fluid">
        <p> @{Html.RenderAction("HostSiteSidebar", "HostSiteSidebar", new { id = Model.Article.HostSite.UrlFriendlyName });}</p>
      </div>
      @if (Model.RelatedArticles.Any()) {
        <div>
            <h3>Related Articles</h3>
            <ul>
                @foreach (var relatedArticle in Model.RelatedArticles) {
                    <li>
                        @Html.ActionLink(relatedArticle.Title, "Index", "Article", new {id = relatedArticle.ArticleId}, null)
                    </li>
                }   
            </ul>
        </div>
      }
  </div>
</div>